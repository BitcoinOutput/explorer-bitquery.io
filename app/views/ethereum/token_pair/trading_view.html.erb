<%# <div class="row">
  <div class="col-12 col-lg-12 mb-4">
    <div  id="OHLC-by-intervals-Table" class="card"></div>
  </div>
</div> %>
<div class="row">
  <div class="col-12 col-lg-12 mb-4">
    <div id="OHLC-by-intervals-Graph" class="card" style="height: 600px;" >
    </div>
  </div>
</div>
<head>
</head>
<script>
  class OHLCbyIntervalsTable extends BootstrapTableComponent {
    configuration() {
        return  {
            topElement: function (response){ return response.EVM.DEXTradeByTokens},
            chainId: function (response){return response.EVM.DEXTradeByTokens[0].ChainId},
            columns: [
                {
                    name: 'Time', cell: function(row){ return row.Block.Time},  rendering: renderDate,
                },
                {
                    name: 'Count', cell: function(row){ return row.count},
                },
                {
                    name: 'Volume', cell: function(row){ return parseFloat(row.volume).toFixed(3)},
                },
                {
                    name: 'Open', cell: function(row){ return parseFloat(row.Trade.open).toFixed(3)},
                },
                {
                    name: 'High', cell: function(row){ return parseFloat(row.Trade.high).toFixed(3)},
                },
                {
                    name: 'Low', cell: function(row){ return parseFloat(row.Trade.low).toFixed(3)},
                },
                {
                    name: 'Close', cell: function(row){ return parseFloat(row.Trade.close).toFixed(3)},
                },
            ]
        }
    }
  }
  class OHLCbyIntervalsGraph extends TradingGraphsComponent {
    configuration() {
        return  {
            topElement: function (response){ return response.EVM.DEXTradeByTokens},
            chainId: function (response){return response.EVM.DEXTradeByTokens[0].ChainId},
            token1: function (response){return response.EVM.DEXTradeByTokens[0].Trade.Side.Currency.Symbol},//'OCC/WETH'
            token2: function (response){return response.EVM.DEXTradeByTokens[0].Trade.Currency.Symbol} ,
            interval: '15',
        }
    }
  }

  const variables = {
    network:'<%= @streaming%>',
    baseCurrency: '<%= @token1 %>',
    quoteCurrency: '<%= @token2 %>',
    till: new Date().toISOString().slice(0,10),
    from: '2023-06-08'
  }
  console.log('variables',variables)
    renderComponent(OHLCbyIntervalsGraph, "#OHLC-by-intervals-Graph",'Subscription-OHLC-by-intervals_1_1',variables,'OHLC-by-intervals_1_1_1_1_1_1_1_1_1_1');

  // renderWithTime(variables,<%= limited_date_range_limit(@from, @till).join(',').html_safe %>, function f(variables){
  //   // renderComponent(OHLCbyIntervalsTable, "#OHLC-by-intervals-Table",'OHLC-by-intervals_1_1_1_1_1',variables);
  //   renderComponent(OHLCbyIntervalsGraph, "#OHLC-by-intervals-Graph",'Subscription-OHLC-by-intervals_1',variables,'OHLC-by-intervals_1_1_1_1_1_1_1');
  // });
</script>
